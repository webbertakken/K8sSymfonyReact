// Core UI Layout compatibility patch for FrameLayout
// Combines Bootstrap4, CoreUI and FrameLayout
//
// Positions and dimensions of fixed elements are calculated according to the
// settings for the width of the borders of FrameLayout as defined in variables.
//
// Note: Fixed elements by default unlike absolute elements do not stay in their
// nearest parent with position relative. Instead they only respect the viewport
// size.
//
// Author: Webber <webber@takken.io>

// When no border sizes are set, assume no borders that affect fixed positions
$frame-border-sizes: ( xl: 0 ) !default;

// Mixins
@mixin respond-to($breakpoint) {
  // If breakpoint exists in bootstrap
  @if (map-has-key($grid-breakpoints, $breakpoint)) {
    // Include given content in that breakpoint
    @include media-breakpoint-down($breakpoint) {
      @content;
    }
  }
}

// Header
.header-fixed {
  #layout.frame {
    .app-header {
      will-change: width, flex;
      transition: width $layout-transition-speed, flex $layout-transition-speed;
      @each $breakpoint, $border-size in $frame-border-sizes {
        @include respond-to($breakpoint) {
          $layout-width-size: calc(2 * #{$border-size});
          width: calc(100% - #{$layout-width-size});
        }
      }
    }
  }
}

// Sidebar
.sidebar-fixed,
.sidebar-off-canvas {
  #layout.frame {
    .sidebar {
      will-change: height, width, margin-left;
      transition: height $layout-transition-speed, width $layout-transition-speed, margin-left $layout-transition-speed;
      @each $breakpoint, $border-size in $frame-border-sizes {
        @include respond-to($breakpoint) {
          $layout-height-up-size: calc(2 * #{$border-size});
          $navbar-and-frame-height: $navbar-height - #{$layout-height-up-size};
          height: calc(100vh - #{$navbar-and-frame-height});
        }
      }
    }
  }
}

// Aside Menu
.aside-menu-fixed {
  #layout.frame .aside-menu {
    will-change: height, right, margin-right;
    transition: height $layout-transition-speed, right $layout-transition-speed, margin-right $layout-transition-speed;
    @each $breakpoint, $border-size in $frame-border-sizes {
      @include respond-to($breakpoint) {
        $layout-height-up-size: calc(2 * #{$border-size});
        $navbar-and-frame-height: $navbar-height - #{$layout-height-up-size};
        height: calc(100vh - #{$navbar-and-frame-height});
      }
    }

    // Tab content within Aside menu
    .tab-content {
      will-change: height;
      transition: height $layout-transition-speed;
      @each $breakpoint, $border-size in $frame-border-sizes {
        @include respond-to($breakpoint) {
          $layout-height-up-size: calc(2 * #{$border-size});
          $navbar-and-frame-height: $navbar-height - #{$layout-height-up-size};
          height: calc(100vh - #{$aside-menu-nav-padding-y * 2 + $font-size-base} - #{$navbar-and-frame-height});
        }
      }
    }
  }
}

// Aside menu
html {
  &:not([dir="rtl"]) {
    .aside-menu-fixed #layout.frame .aside-menu,
    .aside-menu-off-canvas #layout.frame .aside-menu {
      will-change: height, right, margin-right;
      transition: height $layout-transition-speed, right $layout-transition-speed, margin-right $layout-transition-speed;
      @each $breakpoint, $border-size in $frame-border-sizes {
        @include respond-to($breakpoint) {
          right: $border-size;
        }
      }
    }
  }

  &[dir="rtl"] {
    // Aside Menu in reversed direction
    .aside-menu-fixed #layout.frame .aside-menu,
    .aside-menu-off-canvas #layout.frame .aside-menu {
      will-change: height, left, margin-left;
      transition: height $layout-transition-speed, left $layout-transition-speed, margin-left $layout-transition-speed;
      @each $breakpoint, $border-size in $frame-border-sizes {
        @include respond-to($breakpoint) {
          left: $border-size;
        }
      }
    }

    // Sidebar in reversed direction
    .sidebar-fixed #layout.frame .sidebar {
      will-change: height, right, margin-right;
      transition: height $layout-transition-speed, right $layout-transition-speed, margin-right $layout-transition-speed;
      @each $breakpoint, $border-size in $frame-border-sizes {
        @include respond-to($breakpoint) {
          right: $border-size;
        }
      }
    }
  }
}

// Breadcrumb
.breadcrumb-fixed {
  #layout.frame {
    .breadcrumb {
      will-change: top, right, margin-right, left, margin-left, width;
      transition: top $layout-transition-speed, right $layout-transition-speed, margin-right $layout-transition-speed, left $layout-transition-speed, margin-left $layout-transition-speed, width $layout-transition-speed;
      @each $breakpoint, $border-size in $frame-border-sizes {
        @include respond-to($breakpoint) {
          top: $navbar-height + $border-size;
          margin-right: $border-size;
          margin-left: $border-size;
        }
      }
    }
  }
}

// Footer
.footer-fixed {
  #layout.frame {
    .app-footer {
      will-change: bottom, right, margin-right, left, margin-left, width;
      transition: bottom $layout-transition-speed, right $layout-transition-speed, margin-right $layout-transition-speed, left $layout-transition-speed, margin-left $layout-transition-speed, width $layout-transition-speed;
      @each $breakpoint, $border-size in $frame-border-sizes {
        @include respond-to($breakpoint) {
          bottom: $border-size;
          right: $border-size;
          left: $border-size;
        }
      }
    }
  }
}
